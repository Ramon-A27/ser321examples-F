// set as java application
apply plugin: 'application'

//define main class
mainClassName = 'Multiply'

// task which will run Main with default parameters, 
// can be overwritten with: gradle runApp --args '3 4' 
task runApp(type: JavaExec) {
  group 'Multiply tasks'
  description 'Tasks which runs Multiply with default parameters'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Multiply'

  // default arguments if non are given
  args '1'
  args '2'
}

// task which will run Main with default parameters, 
// but also accepts new parameter this time with given names
// Example: gradle runAppAgain -Pnum1=9 -Pnum2=10
// Example2 (this will make Gradle run more quietly in the console):
//   gradle runAppAgain -Pnum1=9 -Pnum2=10 -q --console=plain 
task runAppAgain(type: JavaExec) {
  group 'Multiply tasks'
  description 'Tasks which runs Multiply with default parameters or given values'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Multiply'

  // only works if two arguments are provided
  // Try: using default values in case non or only one parameter is provided
  if (project.hasProperty("num1") && project.hasProperty("num2")) {
    args(project.getProperty('num1'), project.getProperty('num2'));
  } else if (project.hasProperty("num1")){
    args(project.getProperty('num1'), 2);
  } else if (project.hasProperty("num2")){
    args(1, project.getProperty('num1'));
  }  else {
    args(1, 2);
  }
}

// task that runs the Fraction Main which now uses 2 arguments: 
// Ex: gradle runFraction --args '4 7'
task runFraction(type: JavaExec) {
  group 'Fraction Tasks'
  description 'Tasks which runs Fraction with 2 arguments'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Fraction'
  
}

// task that's basically runFraction but with two parameters
// kinda like runAppAgain, can run with 2, 1, or no arguments
// Ex: gradle runFrac -Pdenom=5 -Pnum=2
// Ex2: gradle runFrac -Pdenom=8
// Ex3: gradle runFrac -Pnum=7
task runFrac(type: JavaExec) {
  group 'Fraction Tasks'
  description 'Task which runs Fraction with default parameters or given values'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Fraction'

  // requires 2 args, will work with no numerator or no args at all
  if (project.hasProperty("denom") && project.hasProperty("num")) {
    args(project.getProperty('num'), project.getProperty('denom'));
  } else if (project.hasProperty("denom")){
    args(1, project.getProperty('denom'));
  } else if (project.hasProperty("num")){
    args(project.getProperty('num'), 3);
  }
}


// Try:
// 1. Change Fraction.main so it accepts 2 arguments #DONE
// 2. Create a new gradle tasks that accepts two arguments and 
//    can be called as: gradle runFrac -Pdenom=4 -Pnum=3 or as gradle runFrac -Pnum=3 -Pdenom=4 , also make sure it can run with only 1 or no arguments

// Example how you can add that libraries can be pulled from mavenCentral()
// repositories {
//   mavenCentral()
// }

// Setting dependencies, e.g. when you import JSON in your Java files
// dependencies{
//   implementation 'org.json:json:20171018'
// }
